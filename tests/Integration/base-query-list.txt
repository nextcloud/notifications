 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT 'main'
 primary  0 SELECT name AS table_name
FROM sqlite_master
WHERE type = 'table'
  AND name != 'sqlite_sequence'
  AND name != 'geometry_columns'
  AND name != 'spatial_ref_sys'
UNION ALL
SELECT name
FROM sqlite_temp_master
WHERE type = 'table'
ORDER BY name
 primary  0 SELECT "version" FROM "oc_migrations" WHERE "app" = :dcValue1 ORDER BY "version" ASC
 primary  0 INSERT INTO "oc_appconfig" ("appid", "lazy", "type", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5)
 primary  0 INSERT INTO "oc_appconfig" ("appid", "lazy", "type", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5)
 primary  0 INSERT INTO "oc_appconfig" ("appid", "lazy", "type", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5)
 primary  0 UPDATE "oc_appconfig" SET "configvalue" = :dcValue1, "lazy" = :dcValue2, "type" = :dcValue3 WHERE ("appid" = :dcValue4) AND ("configkey" = :dcValue5)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "user_id", "code", "used" FROM "oc_twofactor_backupcodes" WHERE "user_id" = :dcValue1
 primary  0 INSERT INTO "oc_twofactor_providers" ("provider_id", "uid", "enabled") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 DELETE FROM "oc_jobs" WHERE ("class" = :dcValue1) AND ("argument_hash" = :dcValue2)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "checksum", "parent", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = MAX("mtime", :dcValue1), "etag" = :dcValue3 WHERE ("storage" = :dcValue2) AND ("path_hash" IN ('d41d8cd98f00b204e9800998ecf8427e'))
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  1 INSERT INTO "oc_users" ("uid", "password", "uid_lower") VALUES(:dcValue1, :dcValue2, :dcValue3)
 primary  1 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  1 SELECT "id", "uri", "displayname", "principaluri", "description", "synctoken" FROM "oc_addressbooks" WHERE ("uri" = :dcValue1) AND ("principaluri" = :dcValue2) LIMIT 1
 primary  2 SAVEPOINT DOCTRINE_2
 primary  2 INSERT INTO "oc_addressbooks" ("uri", "displayname", "description", "principaluri", "synctoken") VALUES(:uri, :displayname, :description, :principaluri, :synctoken)
 primary  2 SELECT "id", "uri", "displayname", "principaluri", "description", "synctoken" FROM "oc_addressbooks" WHERE "id" = :dcValue1
 primary  2 RELEASE SAVEPOINT DOCTRINE_2
 primary  1 SELECT "id", "uri", "displayname", "principaluri", "description", "synctoken" FROM "oc_addressbooks" WHERE ("uri" = :dcValue1) AND ("principaluri" = :dcValue2) LIMIT 1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT "id", "uri", "lastmodified", "etag", "size", "carddata", "uid" FROM "oc_cards" WHERE ("addressbookid" = :dcValue1) AND ("uri" = :dcValue2) LIMIT 1
 primary  1 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  1 INSERT INTO "oc_accounts" ("uid", "data") VALUES(:dcValue1, :dcValue2)
 primary  1 DELETE FROM "oc_accounts_data" WHERE "uid" = :dcValue1
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  1 INSERT INTO "oc_storages" ("id","available") SELECT ?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_storages" WHERE "id" = ? AND "available" = ?)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  1 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "checksum", "parent", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "checksum", "parent", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  1 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  1 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  1 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  2 SAVEPOINT DOCTRINE_2
 primary  2 INSERT INTO "oc_mimetypes" ("mimetype") VALUES(:dcValue1)
 primary  2 RELEASE SAVEPOINT DOCTRINE_2
 primary  2 SAVEPOINT DOCTRINE_2
 primary  2 INSERT INTO "oc_mimetypes" ("mimetype") VALUES(:dcValue1)
 primary  2 RELEASE SAVEPOINT DOCTRINE_2
 primary  1 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  2 SAVEPOINT DOCTRINE_2
 primary  2 INSERT INTO "oc_mimetypes" ("mimetype") VALUES(:dcValue1)
 primary  2 RELEASE SAVEPOINT DOCTRINE_2
 primary  2 SAVEPOINT DOCTRINE_2
 primary  2 INSERT INTO "oc_mimetypes" ("mimetype") VALUES(:dcValue1)
 primary  2 RELEASE SAVEPOINT DOCTRINE_2
 primary  1 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 INSERT INTO "oc_preferences" ("userid", "appid", "lazy", "type", "flags", "indexed", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  2 SAVEPOINT DOCTRINE_2
 primary  2 INSERT INTO "oc_cards" ("carddata", "uri", "lastmodified", "addressbookid", "size", "etag", "uid") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7)
 primary  3 SAVEPOINT DOCTRINE_3
 primary  3 SELECT "synctoken" FROM "oc_addressbooks" WHERE "id" = :dcValue1
 primary  3 INSERT INTO "oc_addressbookchanges" ("uri", "synctoken", "addressbookid", "operation", "created_at") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, 1740434545)
 primary  3 UPDATE "oc_addressbooks" SET "synctoken" = :dcValue1 WHERE "id" = :dcValue2
 primary  3 RELEASE SAVEPOINT DOCTRINE_3
 primary  3 SAVEPOINT DOCTRINE_3
 primary  3 SELECT "id" FROM "oc_cards" WHERE ("uri" = :dcValue1) AND ("addressbookid" = :dcValue2)
 primary  3 DELETE FROM "oc_cards_properties" WHERE ("cardid" = :dcValue1) AND ("addressbookid" = :dcValue2)
 primary  3 INSERT INTO "oc_cards_properties" ("addressbookid", "cardid", "name", "value", "preferred") VALUES(:dcValue1, :dcValue2, :name, :value, :preferred)
 primary  3 INSERT INTO "oc_cards_properties" ("addressbookid", "cardid", "name", "value", "preferred") VALUES(:dcValue1, :dcValue2, :name, :value, :preferred)
 primary  3 INSERT INTO "oc_cards_properties" ("addressbookid", "cardid", "name", "value", "preferred") VALUES(:dcValue1, :dcValue2, :name, :value, :preferred)
 primary  3 INSERT INTO "oc_cards_properties" ("addressbookid", "cardid", "name", "value", "preferred") VALUES(:dcValue1, :dcValue2, :name, :value, :preferred)
 primary  3 INSERT INTO "oc_cards_properties" ("addressbookid", "cardid", "name", "value", "preferred") VALUES(:dcValue1, :dcValue2, :name, :value, :preferred)
 primary  3 RELEASE SAVEPOINT DOCTRINE_3
 primary  2 SELECT "id", "uri", "displayname", "principaluri", "description", "synctoken" FROM "oc_addressbooks" WHERE "id" = :dcValue1
 primary  2 SELECT "principaluri", "access" FROM "oc_dav_shares" WHERE ("resourceid" = :dcValue1) AND ("type" = :dcValue2) AND ("access" <> :dcValue3) GROUP BY "principaluri", "access"
 primary  2 SELECT "id", "uri", "lastmodified", "etag", "size", "carddata", "uid" FROM "oc_cards" WHERE ("addressbookid" = :dcValue1) AND ("uri" = :dcValue2) LIMIT 1
 primary  2 SELECT "principaluri", "access" FROM "oc_dav_shares" WHERE ("resourceid" = :dcValue1) AND ("type" = :dcValue2) AND ("access" <> :dcValue3) GROUP BY "principaluri", "access"
 primary  2 SELECT "id", "uri", "displayname", "principaluri", "description", "synctoken" FROM "oc_addressbooks" WHERE "id" = :dcValue1
 primary  2 SELECT "displayname", "description", "timezone", "calendarorder", "calendarcolor", "deleted_at", "id", "uri", "synctoken", "components", "principaluri", "transparent" FROM "oc_calendars" WHERE ("uri" = :dcValue1) AND ("principaluri" = :dcValue2) LIMIT 1
 primary  3 SAVEPOINT DOCTRINE_3
 primary  3 INSERT INTO "oc_calendars" ("principaluri", "uri", "synctoken", "transparent", "components", "displayname", "calendarcolor") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7)
 primary  3 SELECT "displayname", "description", "timezone", "calendarorder", "calendarcolor", "deleted_at", "id", "uri", "synctoken", "components", "principaluri", "transparent" FROM "oc_calendars" WHERE "id" = :dcValue1 LIMIT 1
 primary  3 RELEASE SAVEPOINT DOCTRINE_3
 primary  2 SELECT "displayname", "description", "timezone", "calendarorder", "calendarcolor", "deleted_at", "id", "uri", "synctoken", "components", "principaluri", "transparent" FROM "oc_calendars" WHERE ("uri" = :dcValue1) AND ("principaluri" = :dcValue2) LIMIT 1
 primary  2 SELECT "id", "uri", "uid", "lastmodified", "etag", "calendarid", "size", "calendardata", "componenttype", "classification", "deleted_at" FROM "oc_calendarobjects" WHERE ("calendarid" = :dcValue1) AND ("uri" = :dcValue2) AND ("calendartype" = :dcValue3)
 primary  2 SELECT "id", "uri", "uid", "lastmodified", "etag", "calendarid", "size", "calendardata", "componenttype", "classification", "deleted_at" FROM "oc_calendarobjects" WHERE ("calendarid" = :dcValue1) AND ("uri" = :dcValue2) AND ("calendartype" = :dcValue3)
 primary  2 SELECT "id", "uri", "uid", "lastmodified", "etag", "calendarid", "size", "calendardata", "componenttype", "classification", "deleted_at" FROM "oc_calendarobjects" WHERE ("calendarid" = :dcValue1) AND ("uri" = :dcValue2) AND ("calendartype" = :dcValue3)
 primary  2 RELEASE SAVEPOINT DOCTRINE_2
 primary  0 INSERT INTO "oc_preferences" ("userid", "appid", "lazy", "type", "flags", "indexed", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8)
 primary  0 INSERT INTO "oc_preferences" ("userid", "appid", "lazy", "type", "flags", "indexed", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8)
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 INSERT INTO "oc_notifications_settings" ("user_id") VALUES(:dcValue1)
 primary  0 UPDATE "oc_notifications_settings" SET "user_id" = :dcValue1, "batch_time" = :dcValue2, "next_send_time" = :dcValue3 WHERE "id" = :dcValue4
 primary  0 UPDATE "oc_file_locks" SET "lock" = "lock" - '1' WHERE ("key" IN (:chunk)) AND ("lock" > 0)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "user_id", "code", "used" FROM "oc_twofactor_backupcodes" WHERE "user_id" = :dcValue1
 primary  0 INSERT INTO "oc_twofactor_providers" ("provider_id", "uid", "enabled") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 DELETE FROM "oc_jobs" WHERE ("class" = :dcValue1) AND ("argument_hash" = :dcValue2)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 INSERT INTO "oc_preferences" ("userid", "appid", "lazy", "type", "flags", "indexed", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8)
 primary  0 INSERT INTO "oc_preferences" ("userid", "appid", "lazy", "type", "flags", "indexed", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 INSERT INTO "oc_storages" ("id","available") SELECT ?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_storages" WHERE "id" = ? AND "available" = ?)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "checksum", "parent", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1 WHERE ("key" = :dcValue2) AND ("lock" = :dcValue3)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "checksum", "parent", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = MAX("mtime", :dcValue1), "etag" = :dcValue3 WHERE ("storage" = :dcValue2) AND ("path_hash" IN ('d41d8cd98f00b204e9800998ecf8427e'))
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "checksum", "parent", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = MAX("mtime", :dcValue1), "etag" = :dcValue3 WHERE ("storage" = :dcValue2) AND ("path_hash" IN ('d41d8cd98f00b204e9800998ecf8427e'))
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "json", "sync_token" FROM "oc_files_metadata" WHERE "file_id" = :dcValue1
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 UPDATE "oc_file_locks" SET "lock" = "lock" + :dcValue1, "ttl" = :dcValue2 WHERE ("key" = :dcValue3) AND ("lock" >= :dcValue4)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1, "ttl" = :dcValue2 WHERE ("key" = :dcValue3) AND ("lock" = :dcValue4)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = MAX("mtime", :dcValue1), "etag" = :dcValue3 WHERE ("storage" = :dcValue2) AND ("path_hash" IN ('d41d8cd98f00b204e9800998ecf8427e', '45b963397aa40d4a0063e0d85e4fe7a1'))
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1, "ttl" = :dcValue2 WHERE ("key" = :dcValue3) AND ("lock" = :dcValue4)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_files_versions" ("file_id", "timestamp", "size", "mimetype", "metadata") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "json", "sync_token" FROM "oc_files_metadata" WHERE "file_id" = :dcValue1
 primary  0 SELECT "id" FROM "oc_jobs" WHERE ("class" = :dcValue1) AND ("argument_hash" = :dcValue2) LIMIT 1
 primary  0 INSERT INTO "oc_jobs" ("class", "argument", "argument_hash", "last_run", "last_checked") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT * FROM "oc_files_versions" WHERE ("file_id" = :dcValue1) AND ("timestamp" = :dcValue2)
 primary  0 UPDATE "oc_files_versions" SET "metadata" = :dcValue1 WHERE "id" = :dcValue2
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1, "ttl" = :dcValue2 WHERE ("key" = :dcValue3) AND ("lock" = :dcValue4)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue6, "checksum" = :dcValue7, "parent" = :dcValue8 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("size" <> :dcValue3) OR ("size" IS NULL)) OR (("checksum" <> :dcValue4) OR ("checksum" IS NULL)) OR (("parent" <> :dcValue5) OR ("parent" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = MAX("mtime", :dcValue1), "etag" = :dcValue3, "size" = CASE WHEN "size" > '-1' THEN MAX("size" + :dcValue4, :dcValue5) ELSE "size" END WHERE ("storage" = :dcValue2) AND ("path_hash" IN ('d41d8cd98f00b204e9800998ecf8427e', '45b963397aa40d4a0063e0d85e4fe7a1'))
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1, "ttl" = :dcValue2 WHERE ("key" = :dcValue3) AND ("lock" = :dcValue4)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "json", "sync_token" FROM "oc_files_metadata" WHERE "file_id" = :dcValue1
 primary  0 SELECT "id" FROM "oc_jobs" WHERE ("class" = :dcValue1) AND ("argument_hash" = :dcValue2) LIMIT 1
 primary  0 UPDATE "oc_jobs" SET "reserved_at" = '0', "last_checked" = :dcValue1, "last_run" = :dcValue2 WHERE ("class" = :dcValue3) AND ("argument_hash" = :dcValue4)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT * FROM "oc_files_versions" WHERE ("file_id" = :dcValue1) AND ("timestamp" = :dcValue2)
 primary  0 UPDATE "oc_files_versions" SET "size" = :dcValue1 WHERE "id" = :dcValue2
 primary  0 SELECT * FROM "oc_files_versions" WHERE ("file_id" = :dcValue1) AND ("timestamp" = :dcValue2)
 primary  0 UPDATE "oc_files_versions" SET "metadata" = :dcValue1 WHERE "id" = :dcValue2
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1, "ttl" = :dcValue2 WHERE ("key" = :dcValue3) AND ("lock" = :dcValue4)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue6, "checksum" = :dcValue7, "parent" = :dcValue8 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("size" <> :dcValue3) OR ("size" IS NULL)) OR (("checksum" <> :dcValue4) OR ("checksum" IS NULL)) OR (("parent" <> :dcValue5) OR ("parent" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  1 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  1 UPDATE "oc_filecache" SET "size" = :dcValue6, "checksum" = :dcValue7, "parent" = :dcValue8 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("size" <> :dcValue3) OR ("size" IS NULL)) OR (("checksum" <> :dcValue4) OR ("checksum" IS NULL)) OR (("parent" <> :dcValue5) OR ("parent" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  1 UPDATE "oc_filecache" SET "size" = :dcValue6, "checksum" = :dcValue7, "parent" = :dcValue8 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("size" <> :dcValue3) OR ("size" IS NULL)) OR (("checksum" <> :dcValue4) OR ("checksum" IS NULL)) OR (("parent" <> :dcValue5) OR ("parent" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1 WHERE ("key" = :dcValue2) AND ("lock" = :dcValue3)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT COUNT(*) FROM "oc_calendars" WHERE ("principaluri" = :dcValue1) AND ("uri" <> :dcValue2)
 primary  1 INSERT INTO "oc_calendars" ("principaluri", "uri", "synctoken", "transparent", "components", "displayname", "calendarcolor") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7)
 primary  1 SELECT "displayname", "description", "timezone", "calendarorder", "calendarcolor", "deleted_at", "id", "uri", "synctoken", "components", "principaluri", "transparent" FROM "oc_calendars" WHERE "id" = :dcValue1 LIMIT 1
 primary  1 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT COUNT(*) FROM "oc_addressbooks" WHERE "principaluri" = :dcValue1
 primary  1 INSERT INTO "oc_addressbooks" ("uri", "displayname", "description", "principaluri", "synctoken") VALUES(:uri, :displayname, :description, :principaluri, :synctoken)
 primary  1 SELECT "id", "uri", "displayname", "principaluri", "description", "synctoken" FROM "oc_addressbooks" WHERE "id" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1 LIMIT 1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1 LIMIT 1
 primary  0 UPDATE "oc_file_locks" SET "lock" = "lock" - '1' WHERE ("key" IN (:chunk)) AND ("lock" > 0)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT * FROM "oc_notifications" WHERE ("app" = :dcValue1) AND ("user" = :dcValue2) AND ("object_type" = :dcValue3) AND ("object_id" = :dcValue4)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT * FROM "oc_notifications" WHERE ("app" = :dcValue1) AND ("user" = :dcValue2) AND ("object_type" = :dcValue3) AND ("object_id" = :dcValue4)
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("app" = :dcValue1) AND ("user" = :dcValue2) AND ("timestamp" = :dcValue3) AND ("object_type" = :dcValue4) AND ("object_id" = :dcValue5) AND ("subject" = :dcValue6) AND ("message" = :dcValue7)
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 DELETE FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 DELETE FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 DELETE FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  1 INSERT INTO "oc_users" ("uid", "password", "uid_lower") VALUES(:dcValue1, :dcValue2, :dcValue3)
 primary  1 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  1 SELECT "id", "uri", "displayname", "principaluri", "description", "synctoken" FROM "oc_addressbooks" WHERE ("uri" = :dcValue1) AND ("principaluri" = :dcValue2) LIMIT 1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT "id", "uri", "lastmodified", "etag", "size", "carddata", "uid" FROM "oc_cards" WHERE ("addressbookid" = :dcValue1) AND ("uri" = :dcValue2) LIMIT 1
 primary  1 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  1 INSERT INTO "oc_accounts" ("uid", "data") VALUES(:dcValue1, :dcValue2)
 primary  1 DELETE FROM "oc_accounts_data" WHERE "uid" = :dcValue1
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 INSERT INTO "oc_accounts_data" ("uid", "name", "value") VALUES(:dcValue1, :name, :value)
 primary  1 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  1 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 INSERT INTO "oc_preferences" ("userid", "appid", "lazy", "type", "flags", "indexed", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  1 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  1 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  1 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  2 SAVEPOINT DOCTRINE_2
 primary  2 INSERT INTO "oc_cards" ("carddata", "uri", "lastmodified", "addressbookid", "size", "etag", "uid") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7)
 primary  3 SAVEPOINT DOCTRINE_3
 primary  3 SELECT "synctoken" FROM "oc_addressbooks" WHERE "id" = :dcValue1
 primary  3 INSERT INTO "oc_addressbookchanges" ("uri", "synctoken", "addressbookid", "operation", "created_at") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, 1740434559)
 primary  3 UPDATE "oc_addressbooks" SET "synctoken" = :dcValue1 WHERE "id" = :dcValue2
 primary  3 RELEASE SAVEPOINT DOCTRINE_3
 primary  3 SAVEPOINT DOCTRINE_3
 primary  3 SELECT "id" FROM "oc_cards" WHERE ("uri" = :dcValue1) AND ("addressbookid" = :dcValue2)
 primary  3 DELETE FROM "oc_cards_properties" WHERE ("cardid" = :dcValue1) AND ("addressbookid" = :dcValue2)
 primary  3 INSERT INTO "oc_cards_properties" ("addressbookid", "cardid", "name", "value", "preferred") VALUES(:dcValue1, :dcValue2, :name, :value, :preferred)
 primary  3 INSERT INTO "oc_cards_properties" ("addressbookid", "cardid", "name", "value", "preferred") VALUES(:dcValue1, :dcValue2, :name, :value, :preferred)
 primary  3 INSERT INTO "oc_cards_properties" ("addressbookid", "cardid", "name", "value", "preferred") VALUES(:dcValue1, :dcValue2, :name, :value, :preferred)
 primary  3 INSERT INTO "oc_cards_properties" ("addressbookid", "cardid", "name", "value", "preferred") VALUES(:dcValue1, :dcValue2, :name, :value, :preferred)
 primary  3 INSERT INTO "oc_cards_properties" ("addressbookid", "cardid", "name", "value", "preferred") VALUES(:dcValue1, :dcValue2, :name, :value, :preferred)
 primary  3 RELEASE SAVEPOINT DOCTRINE_3
 primary  2 SELECT "id", "uri", "displayname", "principaluri", "description", "synctoken" FROM "oc_addressbooks" WHERE "id" = :dcValue1
 primary  2 SELECT "principaluri", "access" FROM "oc_dav_shares" WHERE ("resourceid" = :dcValue1) AND ("type" = :dcValue2) AND ("access" <> :dcValue3) GROUP BY "principaluri", "access"
 primary  2 SELECT "id", "uri", "lastmodified", "etag", "size", "carddata", "uid" FROM "oc_cards" WHERE ("addressbookid" = :dcValue1) AND ("uri" = :dcValue2) LIMIT 1
 primary  2 SELECT "principaluri", "access" FROM "oc_dav_shares" WHERE ("resourceid" = :dcValue1) AND ("type" = :dcValue2) AND ("access" <> :dcValue3) GROUP BY "principaluri", "access"
 primary  2 SELECT "id", "uri", "displayname", "principaluri", "description", "synctoken" FROM "oc_addressbooks" WHERE "id" = :dcValue1
 primary  2 SELECT "displayname", "description", "timezone", "calendarorder", "calendarcolor", "deleted_at", "id", "uri", "synctoken", "components", "principaluri", "transparent" FROM "oc_calendars" WHERE ("uri" = :dcValue1) AND ("principaluri" = :dcValue2) LIMIT 1
 primary  2 SELECT "id", "uri", "uid", "lastmodified", "etag", "calendarid", "size", "calendardata", "componenttype", "classification", "deleted_at" FROM "oc_calendarobjects" WHERE ("calendarid" = :dcValue1) AND ("uri" = :dcValue2) AND ("calendartype" = :dcValue3)
 primary  2 SELECT "id", "uri", "uid", "lastmodified", "etag", "calendarid", "size", "calendardata", "componenttype", "classification", "deleted_at" FROM "oc_calendarobjects" WHERE ("calendarid" = :dcValue1) AND ("uri" = :dcValue2) AND ("calendartype" = :dcValue3)
 primary  2 SELECT "id", "uri", "uid", "lastmodified", "etag", "calendarid", "size", "calendardata", "componenttype", "classification", "deleted_at" FROM "oc_calendarobjects" WHERE ("calendarid" = :dcValue1) AND ("uri" = :dcValue2) AND ("calendartype" = :dcValue3)
 primary  2 RELEASE SAVEPOINT DOCTRINE_2
 primary  0 INSERT INTO "oc_preferences" ("userid", "appid", "lazy", "type", "flags", "indexed", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8)
 primary  0 INSERT INTO "oc_preferences" ("userid", "appid", "lazy", "type", "flags", "indexed", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8)
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 INSERT INTO "oc_notifications_settings" ("user_id") VALUES(:dcValue1)
 primary  0 UPDATE "oc_notifications_settings" SET "user_id" = :dcValue1, "batch_time" = :dcValue2, "next_send_time" = :dcValue3 WHERE "id" = :dcValue4
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "user_id", "code", "used" FROM "oc_twofactor_backupcodes" WHERE "user_id" = :dcValue1
 primary  0 INSERT INTO "oc_twofactor_providers" ("provider_id", "uid", "enabled") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 DELETE FROM "oc_jobs" WHERE ("class" = :dcValue1) AND ("argument_hash" = :dcValue2)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 INSERT INTO "oc_preferences" ("userid", "appid", "lazy", "type", "flags", "indexed", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8)
 primary  0 INSERT INTO "oc_preferences" ("userid", "appid", "lazy", "type", "flags", "indexed", "configkey", "configvalue") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 INSERT INTO "oc_storages" ("id","available") SELECT ?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_storages" WHERE "id" = ? AND "available" = ?)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "checksum", "parent", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1 WHERE ("key" = :dcValue2) AND ("lock" = :dcValue3)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "checksum", "parent", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = MAX("mtime", :dcValue1), "etag" = :dcValue3 WHERE ("storage" = :dcValue2) AND ("path_hash" IN ('d41d8cd98f00b204e9800998ecf8427e'))
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "checksum", "parent", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = MAX("mtime", :dcValue1), "etag" = :dcValue3 WHERE ("storage" = :dcValue2) AND ("path_hash" IN ('d41d8cd98f00b204e9800998ecf8427e'))
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "json", "sync_token" FROM "oc_files_metadata" WHERE "file_id" = :dcValue1
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 UPDATE "oc_file_locks" SET "lock" = "lock" + :dcValue1, "ttl" = :dcValue2 WHERE ("key" = :dcValue3) AND ("lock" >= :dcValue4)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1, "ttl" = :dcValue2 WHERE ("key" = :dcValue3) AND ("lock" = :dcValue4)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = MAX("mtime", :dcValue1), "etag" = :dcValue3 WHERE ("storage" = :dcValue2) AND ("path_hash" IN ('d41d8cd98f00b204e9800998ecf8427e', '45b963397aa40d4a0063e0d85e4fe7a1'))
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1, "ttl" = :dcValue2 WHERE ("key" = :dcValue3) AND ("lock" = :dcValue4)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_files_versions" ("file_id", "timestamp", "size", "mimetype", "metadata") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "json", "sync_token" FROM "oc_files_metadata" WHERE "file_id" = :dcValue1
 primary  0 SELECT "id" FROM "oc_jobs" WHERE ("class" = :dcValue1) AND ("argument_hash" = :dcValue2) LIMIT 1
 primary  0 INSERT INTO "oc_jobs" ("class", "argument", "argument_hash", "last_run", "last_checked") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT * FROM "oc_files_versions" WHERE ("file_id" = :dcValue1) AND ("timestamp" = :dcValue2)
 primary  0 UPDATE "oc_files_versions" SET "metadata" = :dcValue1 WHERE "id" = :dcValue2
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1, "ttl" = :dcValue2 WHERE ("key" = :dcValue3) AND ("lock" = :dcValue4)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue6, "checksum" = :dcValue7, "parent" = :dcValue8 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("size" <> :dcValue3) OR ("size" IS NULL)) OR (("checksum" <> :dcValue4) OR ("checksum" IS NULL)) OR (("parent" <> :dcValue5) OR ("parent" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = MAX("mtime", :dcValue1), "etag" = :dcValue3, "size" = CASE WHEN "size" > '-1' THEN MAX("size" + :dcValue4, :dcValue5) ELSE "size" END WHERE ("storage" = :dcValue2) AND ("path_hash" IN ('d41d8cd98f00b204e9800998ecf8427e', '45b963397aa40d4a0063e0d85e4fe7a1'))
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1, "ttl" = :dcValue2 WHERE ("key" = :dcValue3) AND ("lock" = :dcValue4)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "json", "sync_token" FROM "oc_files_metadata" WHERE "file_id" = :dcValue1
 primary  0 SELECT "id" FROM "oc_jobs" WHERE ("class" = :dcValue1) AND ("argument_hash" = :dcValue2) LIMIT 1
 primary  0 UPDATE "oc_jobs" SET "reserved_at" = '0', "last_checked" = :dcValue1, "last_run" = :dcValue2 WHERE ("class" = :dcValue3) AND ("argument_hash" = :dcValue4)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT * FROM "oc_files_versions" WHERE ("file_id" = :dcValue1) AND ("timestamp" = :dcValue2)
 primary  0 UPDATE "oc_files_versions" SET "size" = :dcValue1 WHERE "id" = :dcValue2
 primary  0 SELECT * FROM "oc_files_versions" WHERE ("file_id" = :dcValue1) AND ("timestamp" = :dcValue2)
 primary  0 UPDATE "oc_files_versions" SET "metadata" = :dcValue1 WHERE "id" = :dcValue2
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1, "ttl" = :dcValue2 WHERE ("key" = :dcValue3) AND ("lock" = :dcValue4)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue6, "checksum" = :dcValue7, "parent" = :dcValue8 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("size" <> :dcValue3) OR ("size" IS NULL)) OR (("checksum" <> :dcValue4) OR ("checksum" IS NULL)) OR (("parent" <> :dcValue5) OR ("parent" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  1 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  1 UPDATE "oc_filecache" SET "size" = :dcValue6, "checksum" = :dcValue7, "parent" = :dcValue8 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("size" <> :dcValue3) OR ("size" IS NULL)) OR (("checksum" <> :dcValue4) OR ("checksum" IS NULL)) OR (("parent" <> :dcValue5) OR ("parent" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  1 INSERT INTO "oc_file_locks" ("key", "lock", "ttl") VALUES(:dcValue1, :dcValue2, :dcValue3) ON CONFLICT DO NOTHING
 primary  1 UPDATE "oc_filecache" SET "size" = :dcValue6, "checksum" = :dcValue7, "parent" = :dcValue8 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("size" <> :dcValue3) OR ("size" IS NULL)) OR (("checksum" <> :dcValue4) OR ("checksum" IS NULL)) OR (("parent" <> :dcValue5) OR ("parent" IS NULL)))
 primary  1 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 UPDATE "oc_file_locks" SET "lock" = :dcValue1 WHERE ("key" = :dcValue2) AND ("lock" = :dcValue3)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT COUNT(*) FROM "oc_calendars" WHERE ("principaluri" = :dcValue1) AND ("uri" <> :dcValue2)
 primary  1 INSERT INTO "oc_calendars" ("principaluri", "uri", "synctoken", "transparent", "components", "displayname", "calendarcolor") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7)
 primary  1 SELECT "displayname", "description", "timezone", "calendarorder", "calendarcolor", "deleted_at", "id", "uri", "synctoken", "components", "principaluri", "transparent" FROM "oc_calendars" WHERE "id" = :dcValue1 LIMIT 1
 primary  1 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT COUNT(*) FROM "oc_addressbooks" WHERE "principaluri" = :dcValue1
 primary  1 INSERT INTO "oc_addressbooks" ("uri", "displayname", "description", "principaluri", "synctoken") VALUES(:uri, :displayname, :description, :principaluri, :synctoken)
 primary  1 SELECT "id", "uri", "displayname", "principaluri", "description", "synctoken" FROM "oc_addressbooks" WHERE "id" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1 LIMIT 1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1 LIMIT 1
 primary  0 UPDATE "oc_file_locks" SET "lock" = "lock" - '1' WHERE ("key" IN (:chunk)) AND ("lock" > 0)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 DELETE FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 DELETE FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 DELETE FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 DELETE FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "notification_id" FROM "oc_notifications" WHERE ("notification_id" IN (:dcValue1)) AND ("user" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications" WHERE ("notification_id" = :dcValue1) AND ("user" = :dcValue2)
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE "uid" = :dcValue1 ORDER BY "id" ASC LIMIT 1
 primary  0 INSERT INTO "oc_authtoken" ("uid", "login_name", "public_key", "private_key", "password", "password_hash", "name", "token", "type", "remember", "last_activity", "last_check", "version") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("id" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("filecache"."parent" = :dcValue1) AND ("storage" = :dcValue2) ORDER BY "name" ASC
 primary  0 UPDATE "oc_filecache" SET "size" = :dcValue4 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND (("size" <> :dcValue3) OR ("size" IS NULL))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 INSERT INTO "oc_filecache" ("mimepart", "mimetype", "mtime", "size", "etag", "storage_mtime", "permissions", "name", "parent", "checksum", "path_hash", "path", "storage") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 UPDATE "oc_filecache" SET "mtime" = :dcValue5, "storage_mtime" = :dcValue6 WHERE ("fileid" = :dcValue1) AND ("storage" = :dcValue2) AND ((("mtime" <> :dcValue3) OR ("mtime" IS NULL)) OR (("storage_mtime" <> :dcValue4) OR ("storage_mtime" IS NULL)))
 primary  0 SELECT "path" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("fileid" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE ("uid" = :dcValue1) AND ("token" = :dcValue2)
 primary  0 DELETE FROM "oc_notifications_pushhash" WHERE ("uid" = :dcValue1) AND ("pushtokenhash" = :dcValue2)
 primary  0 INSERT INTO "oc_notifications_pushhash" ("uid", "token", "deviceidentifier", "devicepublickey", "devicepublickeyhash", "pushtokenhash", "proxyserver", "apptype") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("id" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE "uid" = :dcValue1 ORDER BY "id" ASC LIMIT 1
 primary  0 INSERT INTO "oc_authtoken" ("uid", "login_name", "public_key", "private_key", "password", "password_hash", "name", "token", "type", "remember", "last_activity", "last_check", "version") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("id" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE ("uid" = :dcValue1) AND ("token" = :dcValue2)
 primary  0 DELETE FROM "oc_notifications_pushhash" WHERE ("uid" = :dcValue1) AND ("pushtokenhash" = :dcValue2)
 primary  0 INSERT INTO "oc_notifications_pushhash" ("uid", "token", "deviceidentifier", "devicepublickey", "devicepublickeyhash", "pushtokenhash", "proxyserver", "apptype") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("id" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 DELETE FROM "oc_notifications_pushhash" WHERE ("uid" = :dcValue1) AND ("token" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("id" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 DELETE FROM "oc_notifications_pushhash" WHERE ("uid" = :dcValue1) AND ("token" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT * FROM "oc_authtoken" WHERE "uid" = :dcValue1 ORDER BY "id" ASC LIMIT 1
 primary  0 INSERT INTO "oc_authtoken" ("uid", "login_name", "public_key", "private_key", "password", "password_hash", "name", "token", "type", "remember", "last_activity", "last_check", "version") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12, :dcValue13)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("token" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_authtoken" WHERE ("id" = :dcValue1) AND ("version" = :dcValue2)
 primary  0 DELETE FROM "oc_notifications_pushhash" WHERE ("uid" = :dcValue1) AND ("token" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 UPDATE "oc_preferences" SET "configvalue" = :dcValue1, "lazy" = :dcValue2, "type" = :dcValue3, "flags" = :dcValue4, "indexed" = :dcValue5 WHERE ("userid" = :dcValue6) AND ("appid" = :dcValue7) AND ("configkey" = :dcValue8)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "class" FROM "oc_authorized_groups" "auth" WHERE "group_id" IN (:dcValue1)
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  0 SELECT "data" FROM "oc_accounts" WHERE "uid" = :uid
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "gid" FROM "oc_group_admin" WHERE "uid" = :dcValue1
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "id", "mimetype" FROM "oc_mimetypes"
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 SELECT "filecache"."fileid", "storage", "path", "path_hash", "filecache"."parent", "filecache"."name", "mimetype", "mimepart", "size", "mtime", "storage_mtime", "encrypted", "filecache"."etag", "filecache"."permissions", "checksum", "unencrypted_size", "metadata_etag", "creation_time", "upload_time", "meta"."json" AS "meta_json", "meta"."sync_token" AS "meta_sync_token" FROM "oc_filecache" "filecache" LEFT JOIN "oc_filecache_extended" "fe" ON "filecache"."fileid" = "fe"."fileid" LEFT JOIN "oc_files_metadata" "meta" ON "filecache"."fileid" = "meta"."file_id" WHERE ("path_hash" = :dcValue1) AND ("storage" = :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 INSERT INTO "oc_notifications" ("app", "user", "timestamp", "object_type", "object_id", "subject", "subject_parameters", "message", "message_parameters", "link", "icon", "actions") VALUES(:dcValue1, :dcValue2, :dcValue3, :dcValue4, :dcValue5, :dcValue6, :dcValue7, :dcValue8, :dcValue9, :dcValue10, :dcValue11, :dcValue12)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" = :dcValue1
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_user_status" WHERE "user_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications" WHERE "user" = :dcValue1 ORDER BY "notification_id" DESC LIMIT 25
 primary  0 SELECT "name" FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("last_activity" >= :dcValue2)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "lazy" FROM "oc_appconfig"
 primary  0 SELECT COUNT(*) AS "attempts" FROM "oc_bruteforce_attempts" WHERE ("occurred" > :dcValue1) AND ("subnet" = :dcValue2) AND ("action" = :dcValue3)
 primary  0 SELECT "uid", "displayname", "password" FROM "oc_users" WHERE "uid_lower" = :dcValue1
 primary  0 SELECT "provider_id", "enabled" FROM "oc_twofactor_providers" WHERE "uid" = :dcValue1
 primary  0 SELECT "appid", "configkey", "configvalue", "type", "flags" FROM "oc_preferences" WHERE ("userid" = :dcValue1) AND ("lazy" = :dcValue2)
 primary  1 SELECT * FROM "oc_authtoken" WHERE ("uid" = :dcValue1) AND ("version" = :dcValue2) LIMIT 1000
 primary  0 SELECT * FROM "oc_notifications_settings" WHERE "user_id" = :dcValue1
 primary  0 DELETE FROM "oc_bruteforce_attempts" WHERE ("subnet" = :dcValue1) AND ("action" = :dcValue2) AND ("metadata" = :dcValue3)
 primary  0 SELECT "id", "numeric_id", "available", "last_checked" FROM "oc_storages" WHERE "id" = :dcValue1
 primary  0 SELECT "fileid" FROM "oc_filecache" WHERE ("storage" = :dcValue1) AND ("path_hash" = :dcValue2)
 primary  0 SELECT "remote", "share_token", "password", "mountpoint", "owner" FROM "oc_share_external" WHERE ("user" = :dcValue1) AND ("accepted" = :dcValue2)
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" = :dcValue2) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT "gu"."gid", "g"."displayname" FROM "oc_group_user" "gu" LEFT JOIN "oc_groups" "g" ON "gu"."gid" = "g"."gid" WHERE "uid" = :dcValue1
 primary  0 SELECT "s".*, "f"."fileid", "f"."path", "f"."permissions" as "f_permissions", "f"."storage", "f"."path_hash", "f"."parent" as "f_parent", "f"."name", "f"."mimetype", "f"."mimepart", "f"."size", "f"."mtime", "f"."storage_mtime", "f"."encrypted", "f"."unencrypted_size", "f"."etag", "f"."checksum", "st"."id" AS "storage_string_id" FROM "oc_share" "s" LEFT JOIN "oc_filecache" "f" ON "s"."file_source" = "f"."fileid" LEFT JOIN "oc_storages" "st" ON "f"."storage" = "st"."numeric_id" WHERE ("share_type" = :dcValue1) AND ("share_with" IN (:dcValue2)) AND (("item_type" = :dcValue3) OR ("item_type" = :dcValue4)) ORDER BY "s"."id" ASC
 primary  0 SELECT * FROM "oc_share" WHERE ("share_with" = :dcValue1) AND ("share_type" = :dcValue2) AND ("item_type" IN (:dcValue3, :dcValue4))
 primary  0 SELECT "storage_id", "root_id", "user_id", "mount_point", "mount_id", "mount_provider_class" FROM "oc_mounts" "m" WHERE "user_id" = :dcValue1
 primary  1 INSERT INTO "oc_mounts" ("storage_id","root_id","user_id","mount_point","mount_id","mount_provider_class") SELECT ?,?,?,?,?,?  WHERE NOT EXISTS (SELECT 1 FROM "oc_mounts" WHERE "root_id" = ? AND "user_id" = ? AND "mount_point" = ?)
 primary  0 SELECT * FROM "oc_notifications"
 primary  1 DELETE FROM "oc_notifications" WHERE "notification_id" IN (:dcValue1)
 primary  0 SELECT * FROM "oc_notifications_pushhash" WHERE "uid" IN (:dcValue1)
 primary  0 PRAGMA read_uncommitted = 1
 primary  0 PRAGMA case_sensitive_like = true
 primary  0 PRAGMA journal_mode = WAL
 primary  0 SELECT "appid", "configkey", "configvalue", "type" FROM "oc_appconfig" WHERE "lazy" = :dcValue1
 primary  0 SELECT DISTINCT "event" FROM "oc_webhook_listeners" WHERE "user_id_filter" = ''
 primary  0 SELECT "class", "entity", "events" AS "events" FROM "oc_flow_operations" WHERE "events" <> :dcValue1 GROUP BY "class", "entity", "events"
 primary  0 UPDATE "oc_appconfig" SET "configvalue" = :dcValue1, "lazy" = :dcValue2, "type" = :dcValue3 WHERE ("appid" = :dcValue4) AND ("configkey" = :dcValue5)
